require 'spec_helper'

RSpec.describe Nacha::AbaNumber do
  let(:lotsa_numbers) do
    %w[051009296 053012029 053201814 061101375 061104712 061120819 061121122 061191495
      062000019 062001186 062005690 062006330 062006356 062006505 062006534 062006709
      062101031 062101251 062101264 062101455 062101468 062101484 062101581 062101882
      062102221 062102292 062102386 062102399 062102593 062102713 062102726 062102849
      062103165 062103217 062103453 062103482 062103592 062103864 062104070 062104274
      062104520 062104656 062105244 062105493 062105529 062105532 062105626 062105710
      062105781 062105985 062106120 062106256 062106528 062106557 062106573 062106751
      062200440 062200466 062200628 062200783 062200880 062200961 062201067 062201106
      062201342 062201397 062201449 062201533 062201559 062201601 062201630 062201711
      062201892 062201957 062201999 062202118 062202134 062202147 062202150 062202163
      062202257 062202477 062202574 062202697 062202736 062202804 062202859 062202914
      062203049 062203078 062203227 062203230 062203285 062203308 062203337 062203395
      062203638 062203641 062203670 062203719 062203735 062203858 062203874 062203890
      062203955 062203968 062204019 062204022 062204129 062204158 062204349 062204378
      062204624 062204721 062204789 062204938 062205034 062205199 062205597 062205636
      062205830 062205908 062206114 062206279 062206305 062206318 062206347 062206376
      062206444 062206457 062206460 062206473 062206486 062206512 062206541 062206567
      062206622 062206648 062206651 062206693 062206732 062206745 062206787 062292788
      063115149 063116614 063206663 063210112 064000017 064002280 064003962 064102397
      064200765 064200914 064206594 065101481 065102833 065103243 065104611 065191721
      065305902 065402892 065403626 065403875 065404913 067008414 067010583 071122661
      081001387 081503500 082000109 083901744 084000084 084206105 084302614 084302915
      107005319 107006936 107006949 111317857 111900785 111902000 111907445 111914289
      113103726 113122325 114000718 114009816 114016142 114017125 114900313 114907329
      122105744 122105948 122220506 261170740 261271403 261272046 261273207 262000932
      262083881 262083959 262083991 262084893 262084916 262084961 262085070 262085096
      262086338 262086477 262086561 262086671 262086749 262087133 262087159 262087447
      262087528 262087609 262088019 262088051 262088116 262090120 262175867 262175870
      262183626 262183749 262183985 262184078 262184515 262185116 262187716 262275783
      262275958 262276368 262276384 262276397 262276410 262276452 262276533 262276562
      262276656 262276698 262276724 262276737 262276805 262276944 262277008 262277011
      262277118 262277189 262277192 262277202 262277215 262277257 262277260 262277273
      262277354 262277370 262277419 262283665 262283843 262283908 262284253 262284279
      262284460 262284693 262285223 262285304 262285511 262285605 262285621 262285663
      262286170 262286358 262286455 262286688 262286950 262287195 262287218 262287344
      262287425 262287551 262287894 262289326 262289355 263290576 264071590 264178668
      265176009 265176012 265176038 265176067 265176151 265176193 265176203 265176232
      265176313 265176339 265186594 265190483 284272670 314970664 321170538 322270408
      322271850 061208155 061220447 062006796 062091895 062102030 062102098 062103000
      062103136 062104290 062104397 062105723 062105778 062191627 062192804 062201164
      062201229 062201724 062201847 062202192 062202202 062202998 062203010 062203476
      062203573 062203913 062203942 062204530 062204569 062205704 062205791 062206392
      062206431 062206583 062206596 063013924 063104668 064103079 064103532 065301155
      065305436 073900438 074014213 084306953 107000783 112005809 113010547 114909013
      122101010 262073260 262075475 262085261 262085863 262087502 262087515 262176358
      262176743 262275835 262275848 262276575 262276630 262277024 262277105 262277286
      262277309 262284415 262284431 262285838 262285951 262287360 262287386 264178671
      265175961 265176258 265176274]
  end

  it 'calculates a bunch of check digits' do
    lotsa_numbers.each do |num|
      cd = num[8]
      aba = described_class.new(num[0..7])
      expect(aba.compute_check_digit).to eq cd
    end
  end

  it 'validates a bunch of check digits' do
    lotsa_numbers.each do |num|
      aba = described_class.new(num)
      expect(aba.valid?).to(be_truthy, num)
    end
  end

  it 'rejects an incorrect check digit' do
    aba = described_class.new('111000026')
    expect(aba).not_to be_valid
    expect(aba.errors.first).to match(/Incorrect Check Digit.*/)
  end

  it 'can add a check digit' do
    aba = described_class.new('11100002')
    aba.add_check_digit
    expect(aba.to_s).to eq '111000025'
  end

  it 'can strip off the check_digit' do
    aba = described_class.new('111000025')
    expect(aba).to be_valid
    expect(aba.to_s_base).to eq '11100002'
  end
end
